syntax = "proto3";

package server_model;

// compile with the following command:
// python -m grpc_tools.protoc -I=proto/ --python_out=slower/proto/ --pyi_out=slower/proto/ --grpc_python_out=slower/proto/ proto/server_model.proto
// also update `slower.proto.server_model_pb2` in `server_model_pb2_grpc.py`

// The server model service definition.
service ServerModel {

  rpc BlockingRequest (BatchData) returns (BatchData) {}
  rpc StreamingRequests (stream BatchData) returns (BatchData) {}

}

message BatchData {
  string method = 1;
  map<string, ByteTensor> data = 2;
  ControlCode control_code = 3;
}

enum ControlCode {
  OK = 0;
  DO_CLOSE_STREAM = 1;
  STREAM_CLOSED_OK = 2;
  ERROR_PROCESSING_STREAM = 3;
}

message ByteTensor {
  oneof data {
    bytes single_tensor = 1;
    TensorList tensors = 2;
  }
}

message TensorList {
  repeated bytes tensors = 1;
}
